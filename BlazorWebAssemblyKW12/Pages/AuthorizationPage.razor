@page "/AuthorizationPage"
@using ShopClient
@using Microsoft.AspNetCore.Components
@using Glory.Domain
@using BlazorWebAssemblyKW12.Data;

@inject ClientDTO _client;
@inject NavigationManager _navigation;

@inherits AppComponentBase;

<h3>Authorization</h3>

<EditForm Model="_addFormModel" OnValidSubmit="AuthorizeByPasswordValidAccount">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    Почта: <InputText @bind-Value="_addFormModel.Email"></InputText><br/>
    Пароль: <InputText @bind-Value="_addFormModel.Password"></InputText><br/>
    <br/>
    <input type="submit" value="Войти"/>
</EditForm>

@if (!string.IsNullOrEmpty(_codeId))
{
    <h4>@_codeId</h4>
    <EditForm Model="_codeInput" OnValidSubmit="AuthorizeByCodeValidAccount">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        
        Код: <InputText @bind-Value="_codeInput"></InputText><br/>
        <br/>
        <input type="submit" value="Подтвердить"/>
    </EditForm>
    
}

@if (!string.IsNullOrEmpty(_name))
{
    <p>Hi, @_name !</p>
}
else if (string.IsNullOrEmpty(_codeId) && _isPushed)
{
    <p>Error 401: Unauthorized</p>
}

@code {
    private readonly AccountRequestDTO _addFormModel = new();
    private string? _name;
    private string? _codeId;
    private string _codeInput = "";
    private bool _isPushed;

    private async Task AuthorizeByPasswordValidAccount()
    {
        _codeId = await _client.AuthorizeByPassword(
            new AccountRequestDTO(
                _addFormModel.Name,
                _addFormModel.Email,
                _addFormModel.Password));
        _isPushed = true;
    }

    private async Task AuthorizeByCodeValidAccount()
    {
        var response = await _client.AuthorizeByCode(
            new TwoFA(Guid.Parse(_codeInput), Guid.Empty, 0));
        if (response is not null && response.Length != 0)
        {
            try
            {
                var name_token = response.Split('/');
                _name = name_token[0];
                await SetToken(name_token[1]);
                _navigation.NavigateTo("MyAccount");
            }
            catch (HttpRequestException){}
        }
    }
}